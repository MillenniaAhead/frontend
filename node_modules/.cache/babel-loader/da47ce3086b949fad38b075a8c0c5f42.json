{"ast":null,"code":"var _jsxFileName = \"F:\\\\outletcontrol\\\\frontend\\\\src\\\\context\\\\crud\\\\index.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useMemo, useReducer, createContext, useContext } from \"react\";\nimport { initialState, contextReducer } from \"./reducer\";\nimport contextActions from \"./actions\";\nimport contextSelectors from \"./selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrudContext = /*#__PURE__*/createContext();\nfunction CrudContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n  return /*#__PURE__*/_jsxDEV(CrudContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n_s(CrudContextProvider, \"qvH2RyWsybU3q3wEgwaMp2xbVH0=\");\n_c = CrudContextProvider;\nfunction useCrudContext() {\n  _s2();\n  const context = useContext(CrudContext);\n  if (context === undefined) {\n    throw new Error(\"useCrudContext must be used within a CrudContextProvider\");\n  }\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return {\n    state,\n    crudContextAction,\n    crudContextSelector\n  };\n}\n_s2(useCrudContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { CrudContextProvider, useCrudContext };\nvar _c;\n$RefreshReg$(_c, \"CrudContextProvider\");","map":{"version":3,"names":["React","useMemo","useReducer","createContext","useContext","initialState","contextReducer","contextActions","contextSelectors","CrudContext","CrudContextProvider","children","state","dispatch","value","useCrudContext","context","undefined","Error","crudContextAction","crudContextSelector"],"sources":["F:/outletcontrol/frontend/src/context/crud/index.jsx"],"sourcesContent":["import React, { useMemo, useReducer, createContext, useContext } from \"react\";\r\nimport { initialState, contextReducer } from \"./reducer\";\r\nimport contextActions from \"./actions\";\r\nimport contextSelectors from \"./selectors\";\r\n\r\nconst CrudContext = createContext();\r\n\r\nfunction CrudContextProvider({ children }) {\r\n  const [state, dispatch] = useReducer(contextReducer, initialState);\r\n  const value = useMemo(() => [state, dispatch], [state]);\r\n\r\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\r\n}\r\n\r\nfunction useCrudContext() {\r\n  const context = useContext(CrudContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useCrudContext must be used within a CrudContextProvider\");\r\n  }\r\n  const [state, dispatch] = context;\r\n  const crudContextAction = contextActions(dispatch);\r\n  const crudContextSelector = contextSelectors(state);\r\n  return { state, crudContextAction, crudContextSelector };\r\n}\r\n\r\nexport { CrudContextProvider, useCrudContext };\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,YAAY,EAAEC,cAAc,QAAQ,WAAW;AACxD,OAAOC,cAAc,MAAM,WAAW;AACtC,OAAOC,gBAAgB,MAAM,aAAa;AAAC;AAE3C,MAAMC,WAAW,gBAAGN,aAAa,EAAE;AAEnC,SAASO,mBAAmB,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACI,cAAc,EAAED,YAAY,CAAC;EAClE,MAAMS,KAAK,GAAGb,OAAO,CAAC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAEvD,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEE,KAAM;IAAA,UAAEH;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AAC9E;AAAC,GALQD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAO5B,SAASK,cAAc,GAAG;EAAA;EACxB,MAAMC,OAAO,GAAGZ,UAAU,CAACK,WAAW,CAAC;EACvC,IAAIO,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;EAC7E;EACA,MAAM,CAACN,KAAK,EAAEC,QAAQ,CAAC,GAAGG,OAAO;EACjC,MAAMG,iBAAiB,GAAGZ,cAAc,CAACM,QAAQ,CAAC;EAClD,MAAMO,mBAAmB,GAAGZ,gBAAgB,CAACI,KAAK,CAAC;EACnD,OAAO;IAAEA,KAAK;IAAEO,iBAAiB;IAAEC;EAAoB,CAAC;AAC1D;AAAC,IATQL,cAAc;AAWvB,SAASL,mBAAmB,EAAEK,cAAc;AAAG;AAAA"},"metadata":{},"sourceType":"module"}