{"ast":null,"code":"import * as React from 'react';\nimport { convertChildrenToData } from '../utils/legacyUtil';\n/**\r\n * Parse `children` to `options` if `options` is not provided.\r\n * Then flatten the `options`.\r\n */\n\nexport default function useOptions(options, children, fieldNames) {\n  return React.useMemo(function () {\n    var mergedOptions = options;\n    var childrenAsData = !options;\n    if (childrenAsData) {\n      mergedOptions = convertChildrenToData(children);\n    }\n    var valueOptions = new Map();\n    var labelOptions = new Map();\n    function dig(optionList) {\n      var isChildren = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      // for loop to speed up collection speed\n      for (var i = 0; i < optionList.length; i += 1) {\n        var option = optionList[i];\n        if (!option[fieldNames.options] || isChildren) {\n          valueOptions.set(option[fieldNames.value], option);\n          labelOptions.set(option[fieldNames.label], option);\n        } else {\n          dig(option[fieldNames.options], true);\n        }\n      }\n    }\n    dig(mergedOptions);\n    return {\n      options: mergedOptions,\n      valueOptions: valueOptions,\n      labelOptions: labelOptions\n    };\n  }, [options, children, fieldNames]);\n}","map":{"version":3,"names":["React","convertChildrenToData","useOptions","options","children","fieldNames","useMemo","mergedOptions","childrenAsData","valueOptions","Map","labelOptions","dig","optionList","isChildren","arguments","length","undefined","i","option","set","value","label"],"sources":["F:/outletcontrol/frontend/node_modules/rc-select/es/hooks/useOptions.js"],"sourcesContent":["import * as React from 'react';\r\nimport { convertChildrenToData } from '../utils/legacyUtil';\r\n/**\r\n * Parse `children` to `options` if `options` is not provided.\r\n * Then flatten the `options`.\r\n */\r\n\r\nexport default function useOptions(options, children, fieldNames) {\r\n  return React.useMemo(function () {\r\n    var mergedOptions = options;\r\n    var childrenAsData = !options;\r\n\r\n    if (childrenAsData) {\r\n      mergedOptions = convertChildrenToData(children);\r\n    }\r\n\r\n    var valueOptions = new Map();\r\n    var labelOptions = new Map();\r\n\r\n    function dig(optionList) {\r\n      var isChildren = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n\r\n      // for loop to speed up collection speed\r\n      for (var i = 0; i < optionList.length; i += 1) {\r\n        var option = optionList[i];\r\n\r\n        if (!option[fieldNames.options] || isChildren) {\r\n          valueOptions.set(option[fieldNames.value], option);\r\n          labelOptions.set(option[fieldNames.label], option);\r\n        } else {\r\n          dig(option[fieldNames.options], true);\r\n        }\r\n      }\r\n    }\r\n\r\n    dig(mergedOptions);\r\n    return {\r\n      options: mergedOptions,\r\n      valueOptions: valueOptions,\r\n      labelOptions: labelOptions\r\n    };\r\n  }, [options, children, fieldNames]);\r\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,qBAAqB,QAAQ,qBAAqB;AAC3D;AACA;AACA;AACA;;AAEA,eAAe,SAASC,UAAU,CAACC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,EAAE;EAChE,OAAOL,KAAK,CAACM,OAAO,CAAC,YAAY;IAC/B,IAAIC,aAAa,GAAGJ,OAAO;IAC3B,IAAIK,cAAc,GAAG,CAACL,OAAO;IAE7B,IAAIK,cAAc,EAAE;MAClBD,aAAa,GAAGN,qBAAqB,CAACG,QAAQ,CAAC;IACjD;IAEA,IAAIK,YAAY,GAAG,IAAIC,GAAG,EAAE;IAC5B,IAAIC,YAAY,GAAG,IAAID,GAAG,EAAE;IAE5B,SAASE,GAAG,CAACC,UAAU,EAAE;MACvB,IAAIC,UAAU,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;;MAE1F;MACA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,CAACG,MAAM,EAAEE,CAAC,IAAI,CAAC,EAAE;QAC7C,IAAIC,MAAM,GAAGN,UAAU,CAACK,CAAC,CAAC;QAE1B,IAAI,CAACC,MAAM,CAACd,UAAU,CAACF,OAAO,CAAC,IAAIW,UAAU,EAAE;UAC7CL,YAAY,CAACW,GAAG,CAACD,MAAM,CAACd,UAAU,CAACgB,KAAK,CAAC,EAAEF,MAAM,CAAC;UAClDR,YAAY,CAACS,GAAG,CAACD,MAAM,CAACd,UAAU,CAACiB,KAAK,CAAC,EAAEH,MAAM,CAAC;QACpD,CAAC,MAAM;UACLP,GAAG,CAACO,MAAM,CAACd,UAAU,CAACF,OAAO,CAAC,EAAE,IAAI,CAAC;QACvC;MACF;IACF;IAEAS,GAAG,CAACL,aAAa,CAAC;IAClB,OAAO;MACLJ,OAAO,EAAEI,aAAa;MACtBE,YAAY,EAAEA,YAAY;MAC1BE,YAAY,EAAEA;IAChB,CAAC;EACH,CAAC,EAAE,CAACR,OAAO,EAAEC,QAAQ,EAAEC,UAAU,CAAC,CAAC;AACrC"},"metadata":{},"sourceType":"module"}