{"ast":null,"code":"import * as actionTypes from \"./types\";\nexport const initialState = {\n  isModalOpen: false,\n  isPanelCollapsed: false,\n  isBoxCollapsed: false,\n  isReadBoxOpen: true,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false\n};\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false\n      };\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: false\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: true\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: !state.isPanelCollapsed\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false\n      };\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true\n      };\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false\n      };\n    case actionTypes.OPEN_EDIT_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true\n      };\n    case actionTypes.CLOSE_EDIT_BOX:\n      return {\n        ...state,\n        isEditBoxOpen: false\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen\n      };\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}","map":{"version":3,"names":["actionTypes","initialState","isModalOpen","isPanelCollapsed","isBoxCollapsed","isReadBoxOpen","isAdvancedBoxOpen","isEditBoxOpen","contextReducer","state","action","type","OPEN_MODAL","CLOSE_MODAL","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","COLLAPSE_READ_BOX","Error"],"sources":["F:/outletcontrol/frontend/src/context/crud/reducer.jsx"],"sourcesContent":["import * as actionTypes from \"./types\";\r\n\r\nexport const initialState = {\r\n  isModalOpen: false,\r\n  isPanelCollapsed: false,\r\n  isBoxCollapsed: false,\r\n  isReadBoxOpen: true,\r\n  isAdvancedBoxOpen: false,\r\n  isEditBoxOpen: false,\r\n};\r\n\r\nexport function contextReducer(state, action) {\r\n  switch (action.type) {\r\n    case actionTypes.OPEN_MODAL:\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n      };\r\n    case actionTypes.CLOSE_MODAL:\r\n      return {\r\n        ...state,\r\n        isModalOpen: false,\r\n      };\r\n\r\n    case actionTypes.OPEN_PANEL:\r\n      return {\r\n        ...state,\r\n        isPanelCollapsed: false,\r\n      };\r\n    case actionTypes.CLOSE_PANEL:\r\n      return {\r\n        ...state,\r\n        isPanelCollapsed: true,\r\n      };\r\n    case actionTypes.COLLAPSE_PANEL:\r\n      return {\r\n        ...state,\r\n        isPanelCollapsed: !state.isPanelCollapsed,\r\n      };\r\n    case actionTypes.OPEN_BOX:\r\n      return {\r\n        ...state,\r\n        isBoxCollapsed: true,\r\n      };\r\n    case actionTypes.CLOSE_BOX:\r\n      return {\r\n        ...state,\r\n        isBoxCollapsed: false,\r\n      };\r\n    case actionTypes.COLLAPSE_BOX:\r\n      return {\r\n        ...state,\r\n        isBoxCollapsed: !state.isBoxCollapsed,\r\n      };\r\n    case actionTypes.OPEN_READ_BOX:\r\n      return {\r\n        ...state,\r\n        isAdvancedBoxOpen: false,\r\n        isEditBoxOpen: false,\r\n        isReadBoxOpen: true,\r\n      };\r\n    case actionTypes.CLOSE_READ_BOX:\r\n      return {\r\n        ...state,\r\n        isReadBoxOpen: false,\r\n      };\r\n    case actionTypes.OPEN_ADVANCED_BOX:\r\n      return {\r\n        ...state,\r\n        isReadBoxOpen: false,\r\n        isEditBoxOpen: false,\r\n        isAdvancedBoxOpen: true,\r\n      };\r\n    case actionTypes.CLOSE_ADVANCED_BOX:\r\n      return {\r\n        ...state,\r\n        isAdvancedBoxOpen: false,\r\n      };\r\n    case actionTypes.OPEN_EDIT_BOX:\r\n      return {\r\n        ...state,\r\n        isReadBoxOpen: false,\r\n        isAdvancedBoxOpen: false,\r\n        isEditBoxOpen: true,\r\n      };\r\n    case actionTypes.CLOSE_EDIT_BOX:\r\n      return {\r\n        ...state,\r\n        isEditBoxOpen: false,\r\n      };\r\n    case actionTypes.COLLAPSE_READ_BOX:\r\n      return {\r\n        ...state,\r\n        isReadBoxOpen: !state.isReadBoxOpen,\r\n      };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,WAAW,MAAM,SAAS;AAEtC,OAAO,MAAMC,YAAY,GAAG;EAC1BC,WAAW,EAAE,KAAK;EAClBC,gBAAgB,EAAE,KAAK;EACvBC,cAAc,EAAE,KAAK;EACrBC,aAAa,EAAE,IAAI;EACnBC,iBAAiB,EAAE,KAAK;EACxBC,aAAa,EAAE;AACjB,CAAC;AAED,OAAO,SAASC,cAAc,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC5C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKX,WAAW,CAACY,UAAU;MACzB,OAAO;QACL,GAAGH,KAAK;QACRP,WAAW,EAAE;MACf,CAAC;IACH,KAAKF,WAAW,CAACa,WAAW;MAC1B,OAAO;QACL,GAAGJ,KAAK;QACRP,WAAW,EAAE;MACf,CAAC;IAEH,KAAKF,WAAW,CAACc,UAAU;MACzB,OAAO;QACL,GAAGL,KAAK;QACRN,gBAAgB,EAAE;MACpB,CAAC;IACH,KAAKH,WAAW,CAACe,WAAW;MAC1B,OAAO;QACL,GAAGN,KAAK;QACRN,gBAAgB,EAAE;MACpB,CAAC;IACH,KAAKH,WAAW,CAACgB,cAAc;MAC7B,OAAO;QACL,GAAGP,KAAK;QACRN,gBAAgB,EAAE,CAACM,KAAK,CAACN;MAC3B,CAAC;IACH,KAAKH,WAAW,CAACiB,QAAQ;MACvB,OAAO;QACL,GAAGR,KAAK;QACRL,cAAc,EAAE;MAClB,CAAC;IACH,KAAKJ,WAAW,CAACkB,SAAS;MACxB,OAAO;QACL,GAAGT,KAAK;QACRL,cAAc,EAAE;MAClB,CAAC;IACH,KAAKJ,WAAW,CAACmB,YAAY;MAC3B,OAAO;QACL,GAAGV,KAAK;QACRL,cAAc,EAAE,CAACK,KAAK,CAACL;MACzB,CAAC;IACH,KAAKJ,WAAW,CAACoB,aAAa;MAC5B,OAAO;QACL,GAAGX,KAAK;QACRH,iBAAiB,EAAE,KAAK;QACxBC,aAAa,EAAE,KAAK;QACpBF,aAAa,EAAE;MACjB,CAAC;IACH,KAAKL,WAAW,CAACqB,cAAc;MAC7B,OAAO;QACL,GAAGZ,KAAK;QACRJ,aAAa,EAAE;MACjB,CAAC;IACH,KAAKL,WAAW,CAACsB,iBAAiB;MAChC,OAAO;QACL,GAAGb,KAAK;QACRJ,aAAa,EAAE,KAAK;QACpBE,aAAa,EAAE,KAAK;QACpBD,iBAAiB,EAAE;MACrB,CAAC;IACH,KAAKN,WAAW,CAACuB,kBAAkB;MACjC,OAAO;QACL,GAAGd,KAAK;QACRH,iBAAiB,EAAE;MACrB,CAAC;IACH,KAAKN,WAAW,CAACwB,aAAa;MAC5B,OAAO;QACL,GAAGf,KAAK;QACRJ,aAAa,EAAE,KAAK;QACpBC,iBAAiB,EAAE,KAAK;QACxBC,aAAa,EAAE;MACjB,CAAC;IACH,KAAKP,WAAW,CAACyB,cAAc;MAC7B,OAAO;QACL,GAAGhB,KAAK;QACRF,aAAa,EAAE;MACjB,CAAC;IACH,KAAKP,WAAW,CAAC0B,iBAAiB;MAChC,OAAO;QACL,GAAGjB,KAAK;QACRJ,aAAa,EAAE,CAACI,KAAK,CAACJ;MACxB,CAAC;IACH;MAAS;QACP,MAAM,IAAIsB,KAAK,CAAE,0BAAyBjB,MAAM,CAACC,IAAK,EAAC,CAAC;MAC1D;EAAC;AAEL"},"metadata":{},"sourceType":"module"}