{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91727\\\\Desktop\\\\milina\\\\starter-antd-admin-crud-auth-mern-master\\\\frontend\\\\src\\\\components\\\\SidePanel\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { Layout } from \"antd\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport CollapseBox from \"../CollapseBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Sider\n} = Layout;\nexport default function SidePanel(_ref) {\n  _s();\n\n  let {\n    config,\n    topContent,\n    bottomContent,\n    fixHeaderPanel\n  } = _ref;\n  const {\n    ADD_NEW_ENTITY\n  } = config;\n  const {\n    state,\n    crudContextAction\n  } = useCrudContext();\n  const {\n    isPanelCollapsed,\n    isBoxCollapsed\n  } = state;\n  const {\n    panel,\n    collapsedBox\n  } = crudContextAction;\n  const [styleSider, setStyleSider] = useState(\"0px\");\n  const [opacitySider, setOpacitySider] = useState(\"1\");\n  useEffect(() => {\n    if (isPanelCollapsed) {\n      setStyleSider(\"-400px\");\n      setOpacitySider(0);\n    } else {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }\n\n    setTimeout(() => {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }, 300);\n  }, [isPanelCollapsed]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sider, {\n    trigger: /*#__PURE__*/_jsxDEV(MenuOutlined, {\n      className: \"trigger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this),\n    width: 400,\n    collapsible: true,\n    collapsed: isPanelCollapsed,\n    collapsedWidth: \"0px\",\n    onCollapse: collapsePanel,\n    zeroWidthTriggerStyle: {\n      right: \"-50px\",\n      top: \"15px\"\n    },\n    style: {\n      background: \"#FFF\",\n      left: styleSider,\n      opacity: opacitySider\n    },\n    children: [fixHeaderPanel, /*#__PURE__*/_jsxDEV(CollapseBox, {\n      buttonTitle: ADD_NEW_ENTITY,\n      isPanelCollapsed: isPanelCollapsed,\n      isCollapsed: isBoxCollapsed,\n      onCollapse: collapsePanelBox,\n      topContent: topContent,\n      bottomContent: bottomContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SidePanel, \"6NyiFnXAyfx7DMYJGuBMkMrwJKg=\", false, function () {\n  return [useCrudContext];\n});\n\n_c = SidePanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidePanel\");","map":{"version":3,"sources":["C:/Users/91727/Desktop/milina/starter-antd-admin-crud-auth-mern-master/frontend/src/components/SidePanel/index.jsx"],"names":["React","useState","useEffect","useCrudContext","Layout","MenuOutlined","CollapseBox","Sider","SidePanel","config","topContent","bottomContent","fixHeaderPanel","ADD_NEW_ENTITY","state","crudContextAction","isPanelCollapsed","isBoxCollapsed","panel","collapsedBox","styleSider","setStyleSider","opacitySider","setOpacitySider","setTimeout","collapsePanel","collapse","collapsePanelBox","right","top","background","left","opacity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYH,MAAlB;AAEA,eAAe,SAASI,SAAT,OAKZ;AAAA;;AAAA,MAL+B;AAChCC,IAAAA,MADgC;AAEhCC,IAAAA,UAFgC;AAGhCC,IAAAA,aAHgC;AAIhCC,IAAAA;AAJgC,GAK/B;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAqBJ,MAA3B;AACA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA+BZ,cAAc,EAAnD;AACA,QAAM;AAAEa,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAuCH,KAA7C;AACA,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA0BJ,iBAAhC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,GAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,gBAAJ,EAAsB;AACpBK,MAAAA,aAAa,CAAC,QAAD,CAAb;AACAE,MAAAA,eAAe,CAAC,CAAD,CAAf;AACD,KAHD,MAGO;AACLF,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,MAAAA,eAAe,CAAC,CAAD,CAAf;AACD;;AAEDC,IAAAA,UAAU,CAAC,MAAM;AACfH,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,MAAAA,eAAe,CAAC,CAAD,CAAf;AACD,KAHS,EAGP,GAHO,CAAV;AAID,GAbQ,EAaN,CAACP,gBAAD,CAbM,CAAT;;AAeA,QAAMS,aAAa,GAAG,MAAM;AAC1BP,IAAAA,KAAK,CAACQ,QAAN;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BR,IAAAA,YAAY,CAACO,QAAb;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD;AACE,IAAA,OAAO,eAAE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADX;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,SAAS,EAAEV,gBAJb;AAKE,IAAA,cAAc,EAAE,KALlB;AAME,IAAA,UAAU,EAAES,aANd;AAOE,IAAA,qBAAqB,EAAE;AACrBG,MAAAA,KAAK,EAAE,OADc;AAErBC,MAAAA,GAAG,EAAE;AAFgB,KAPzB;AAWE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,MADP;AAELC,MAAAA,IAAI,EAAEX,UAFD;AAGLY,MAAAA,OAAO,EAAEV;AAHJ,KAXT;AAAA,eAiBGV,cAjBH,eAkBE,QAAC,WAAD;AACE,MAAA,WAAW,EAAEC,cADf;AAEE,MAAA,gBAAgB,EAAEG,gBAFpB;AAGE,MAAA,WAAW,EAAEC,cAHf;AAIE,MAAA,UAAU,EAAEU,gBAJd;AAKE,MAAA,UAAU,EAAEjB,UALd;AAME,MAAA,aAAa,EAAEC;AANjB;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAjEuBH,S;UAOeL,c;;;KAPfK,S","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { Layout } from \"antd\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport CollapseBox from \"../CollapseBox\";\n\nconst { Sider } = Layout;\n\nexport default function SidePanel({\n  config,\n  topContent,\n  bottomContent,\n  fixHeaderPanel,\n}) {\n  const { ADD_NEW_ENTITY } = config;\n  const { state, crudContextAction } = useCrudContext();\n  const { isPanelCollapsed, isBoxCollapsed } = state;\n  const { panel, collapsedBox } = crudContextAction;\n  const [styleSider, setStyleSider] = useState(\"0px\");\n  const [opacitySider, setOpacitySider] = useState(\"1\");\n\n  useEffect(() => {\n    if (isPanelCollapsed) {\n      setStyleSider(\"-400px\");\n      setOpacitySider(0);\n    } else {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }\n\n    setTimeout(() => {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }, 300);\n  }, [isPanelCollapsed]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return (\n    <Sider\n      trigger={<MenuOutlined className=\"trigger\" />}\n      width={400}\n      collapsible\n      collapsed={isPanelCollapsed}\n      collapsedWidth={\"0px\"}\n      onCollapse={collapsePanel}\n      zeroWidthTriggerStyle={{\n        right: \"-50px\",\n        top: \"15px\",\n      }}\n      style={{\n        background: \"#FFF\",\n        left: styleSider,\n        opacity: opacitySider,\n      }}\n    >\n      {fixHeaderPanel}\n      <CollapseBox\n        buttonTitle={ADD_NEW_ENTITY}\n        isPanelCollapsed={isPanelCollapsed}\n        isCollapsed={isBoxCollapsed}\n        onCollapse={collapsePanelBox}\n        topContent={topContent}\n        bottomContent={bottomContent}\n      ></CollapseBox>\n    </Sider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}