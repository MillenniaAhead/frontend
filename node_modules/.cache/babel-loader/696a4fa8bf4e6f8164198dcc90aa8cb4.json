{"ast":null,"code":"var _jsxFileName = \"F:\\\\outletcontrol\\\\frontend\\\\src\\\\router\\\\PublicRoute.jsx\";\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport * as authService from \"@/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PublicRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    // Show the component only when the admin is logged in\n    // Otherwise, redirect the admin to /signin page\n    _jsxDEV(Route, {\n      ...rest,\n      render: props => authService.token.get() ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          x: 200\n        },\n        animate: {\n          x: 0\n        },\n        exit: {\n          scale: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Component, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c = PublicRoute;\nexport default PublicRoute;\nvar _c;\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"names":["React","motion","Route","Redirect","authService","PublicRoute","component","Component","rest","props","token","get","x","scale"],"sources":["F:/outletcontrol/frontend/src/router/PublicRoute.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport * as authService from \"@/auth\";\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    // Show the component only when the admin is logged in\r\n    // Otherwise, redirect the admin to /signin page\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authService.token.get() ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <motion.div\r\n            initial={{ x: 200 }}\r\n            animate={{ x: 0 }}\r\n            exit={{ scale: 0 }}\r\n          >\r\n            <Component {...props} />\r\n          </motion.div>\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,OAAO,KAAKC,WAAW,MAAM,QAAQ;AAAC;AAEtC,MAAMC,WAAW,GAAG,QAAuC;EAAA,IAAtC;IAAEC,SAAS,EAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC;EACpD;IAAA;IACE;IACA;IACA,QAAC,KAAK;MAAA,GACAA,IAAI;MACR,MAAM,EAAGC,KAAK,IACZL,WAAW,CAACM,KAAK,CAACC,GAAG,EAAE,gBACrB,QAAC,QAAQ;QAAC,EAAE,EAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAG,gBAEnB,QAAC,MAAM,CAAC,GAAG;QACT,OAAO,EAAE;UAAEC,CAAC,EAAE;QAAI,CAAE;QACpB,OAAO,EAAE;UAAEA,CAAC,EAAE;QAAE,CAAE;QAClB,IAAI,EAAE;UAAEC,KAAK,EAAE;QAAE,CAAE;QAAA,uBAEnB,QAAC,SAAS;UAAA,GAAKJ;QAAK;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA;IAG7B;MAAA;MAAA;MAAA;IAAA;EACD;AAEN,CAAC;AAAC,KArBIJ,WAAW;AAuBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}