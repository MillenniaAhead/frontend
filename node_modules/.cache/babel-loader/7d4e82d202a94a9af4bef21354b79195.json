{"ast":null,"code":"var _jsxFileName = \"F:\\\\outletcontrol\\\\frontend\\\\src\\\\components\\\\SearchItem\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { AutoComplete, Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { request } from \"@/request\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectSearchedItems } from \"@/redux/crud/selectors\";\nimport { Empty } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchItem(_ref) {\n  _s();\n  let {\n    config\n  } = _ref;\n  let {\n    entity,\n    searchConfig\n  } = config;\n  const {\n    displayLabels,\n    searchFields,\n    outputValue = \"_id\"\n  } = searchConfig;\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const {\n    crudContextAction\n  } = useCrudContext();\n  const {\n    panel,\n    collapsedBox,\n    readBox\n  } = crudContextAction;\n  let source = request.source();\n  const {\n    result,\n    isLoading,\n    isSuccess\n  } = useSelector(selectSearchedItems);\n  const isTyping = useRef(false);\n  let delayTimer = null;\n  useEffect(() => {\n    isLoading && setOptions([{\n      label: \"... Searching\"\n    }]);\n  }, [isLoading]);\n  const onSearch = searchText => {\n    isTyping.current = true;\n    clearTimeout(delayTimer);\n    delayTimer = setTimeout(function () {\n      if (isTyping.current && searchText !== \"\") {\n        dispatch(crud.search(entity, source, {\n          question: searchText,\n          fields: searchFields\n        }));\n      }\n      isTyping.current = false;\n    }, 500);\n  };\n  const onSelect = data => {\n    const currentItem = result.find(item => {\n      return item[outputValue] === data;\n    });\n    dispatch(crud.currentItem(currentItem));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  const onChange = data => {\n    const currentItem = options.find(item => {\n      return item.value === data;\n    });\n    const currentValue = currentItem ? currentItem.label : data;\n    setValue(currentValue);\n  };\n  useEffect(() => {\n    let optionResults = [];\n    result.map(item => {\n      const labels = displayLabels.map(x => item[x]).join(\" \");\n      optionResults.push({\n        label: labels,\n        value: item[outputValue]\n      });\n    });\n    setOptions(optionResults);\n  }, [result]);\n  return /*#__PURE__*/_jsxDEV(AutoComplete, {\n    value: value,\n    options: options,\n    style: {\n      width: \"100%\"\n    },\n    onSelect: onSelect,\n    onSearch: onSearch,\n    onChange: onChange,\n    notFoundContent: !isSuccess ? /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 37\n    }, this) : \"\",\n    allowClear: true,\n    placeholder: \"Your Search here\",\n    children: /*#__PURE__*/_jsxDEV(Input, {\n      suffix: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchItem, \"gx2AO2cziHyj1dOH+rjiPjhocMM=\", false, function () {\n  return [useDispatch, useCrudContext, useSelector];\n});\n_c = SearchItem;\nvar _c;\n$RefreshReg$(_c, \"SearchItem\");","map":{"version":3,"names":["React","useEffect","useState","useRef","AutoComplete","Input","SearchOutlined","useSelector","useDispatch","crud","request","useCrudContext","selectSearchedItems","Empty","SearchItem","config","entity","searchConfig","displayLabels","searchFields","outputValue","dispatch","value","setValue","options","setOptions","crudContextAction","panel","collapsedBox","readBox","source","result","isLoading","isSuccess","isTyping","delayTimer","label","onSearch","searchText","current","clearTimeout","setTimeout","search","question","fields","onSelect","data","currentItem","find","item","open","onChange","currentValue","optionResults","map","labels","x","join","push","width"],"sources":["F:/outletcontrol/frontend/src/components/SearchItem/index.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport { AutoComplete, Input } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { crud } from \"@/redux/crud/actions\";\r\nimport { request } from \"@/request\";\r\nimport { useCrudContext } from \"@/context/crud\";\r\nimport { selectSearchedItems } from \"@/redux/crud/selectors\";\r\n\r\nimport { Empty } from \"antd\";\r\n\r\nexport default function SearchItem({ config }) {\r\n  let { entity, searchConfig } = config;\r\n\r\n  const { displayLabels, searchFields, outputValue = \"_id\" } = searchConfig;\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useState(\"\");\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const { crudContextAction } = useCrudContext();\r\n  const { panel, collapsedBox, readBox } = crudContextAction;\r\n\r\n  let source = request.source();\r\n  const { result, isLoading, isSuccess } = useSelector(selectSearchedItems);\r\n\r\n  const isTyping = useRef(false);\r\n\r\n  let delayTimer = null;\r\n  useEffect(() => {\r\n    isLoading && setOptions([{ label: \"... Searching\" }]);\r\n  }, [isLoading]);\r\n  const onSearch = (searchText) => {\r\n    isTyping.current = true;\r\n\r\n    clearTimeout(delayTimer);\r\n    delayTimer = setTimeout(function () {\r\n      if (isTyping.current && searchText !== \"\") {\r\n        dispatch(\r\n          crud.search(entity, source, {\r\n            question: searchText,\r\n            fields: searchFields,\r\n          })\r\n        );\r\n      }\r\n      isTyping.current = false;\r\n    }, 500);\r\n  };\r\n\r\n  const onSelect = (data) => {\r\n    const currentItem = result.find((item) => {\r\n      return item[outputValue] === data;\r\n    });\r\n\r\n    dispatch(crud.currentItem(currentItem));\r\n    panel.open();\r\n    collapsedBox.open();\r\n    readBox.open();\r\n  };\r\n\r\n  const onChange = (data) => {\r\n    const currentItem = options.find((item) => {\r\n      return item.value === data;\r\n    });\r\n    const currentValue = currentItem ? currentItem.label : data;\r\n    setValue(currentValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let optionResults = [];\r\n\r\n    result.map((item) => {\r\n      const labels = displayLabels.map((x) => item[x]).join(\" \");\r\n      optionResults.push({ label: labels, value: item[outputValue] });\r\n    });\r\n\r\n    setOptions(optionResults);\r\n  }, [result]);\r\n\r\n  return (\r\n    <AutoComplete\r\n      value={value}\r\n      options={options}\r\n      style={{\r\n        width: \"100%\",\r\n      }}\r\n      onSelect={onSelect}\r\n      onSearch={onSearch}\r\n      onChange={onChange}\r\n      notFoundContent={!isSuccess ? <Empty /> : \"\"}\r\n      allowClear={true}\r\n      placeholder=\"Your Search here\"\r\n    >\r\n      <Input suffix={<SearchOutlined />} />\r\n    </AutoComplete>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}