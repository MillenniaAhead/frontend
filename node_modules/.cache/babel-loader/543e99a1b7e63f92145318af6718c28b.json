{"ast":null,"code":"import { notification } from \"antd\";\nimport history from \"@/utils/history\";\nimport codeMessage from \"./codeMessage\";\n\nconst errorHandler = function (error) {\n  let emptyResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  const {\n    response\n  } = error;\n\n  if (!response) {\n    // notification.config({\n    //   duration: 20,\n    // });\n    // notification.error({\n    //   message: \"No internet connection\",\n    //   description: \"Cannot connect to the server, Check your internet network\",\n    // });\n    return {\n      success: false,\n      result: emptyResult,\n      message: \"Cannot connect to the server, Check your internet network\"\n    };\n  } else if (response && response.status) {\n    const message = response.data && response.data.message;\n    const errorText = message || codeMessage[response.status];\n    const {\n      status\n    } = response;\n    notification.config({\n      duration: 20\n    });\n    notification.error({\n      message: `Request error ${status}`,\n      description: errorText\n    });\n\n    if (error.response.data.jwtExpired) {\n      history.push(\"/logout\");\n    }\n\n    return response.data;\n  } else {\n    notification.config({\n      duration: 20\n    });\n    notification.error({\n      message: \"Unknown Error\",\n      description: \"An unknown error occurred in the app, please try again. \"\n    });\n    return {\n      success: false,\n      result: emptyResult,\n      message: \"An unknown error occurred in the app, please try again. \"\n    };\n  }\n};\n\nexport default errorHandler;","map":{"version":3,"sources":["C:/Users/91727/Desktop/milina/starter-antd-admin-crud-auth-mern-master/frontend/src/request/errorHandler.js"],"names":["notification","history","codeMessage","errorHandler","error","emptyResult","response","success","result","message","status","data","errorText","config","duration","description","jwtExpired","push"],"mappings":"AAAA,SAASA,YAAT,QAA6B,MAA7B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,YAAY,GAAG,UAACC,KAAD,EAA+B;AAAA,MAAvBC,WAAuB,uEAAT,IAAS;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAeF,KAArB;;AAEA,MAAI,CAACE,QAAL,EAAe;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAO;AACLC,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA,MAAM,EAAEH,WAFH;AAGLI,MAAAA,OAAO,EAAE;AAHJ,KAAP;AAKD,GAbD,MAaO,IAAIH,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AACtC,UAAMD,OAAO,GAAGH,QAAQ,CAACK,IAAT,IAAiBL,QAAQ,CAACK,IAAT,CAAcF,OAA/C;AACA,UAAMG,SAAS,GAAGH,OAAO,IAAIP,WAAW,CAACI,QAAQ,CAACI,MAAV,CAAxC;AACA,UAAM;AAAEA,MAAAA;AAAF,QAAaJ,QAAnB;AACAN,IAAAA,YAAY,CAACa,MAAb,CAAoB;AAClBC,MAAAA,QAAQ,EAAE;AADQ,KAApB;AAGAd,IAAAA,YAAY,CAACI,KAAb,CAAmB;AACjBK,MAAAA,OAAO,EAAG,iBAAgBC,MAAO,EADhB;AAEjBK,MAAAA,WAAW,EAAEH;AAFI,KAAnB;;AAIA,QAAIR,KAAK,CAACE,QAAN,CAAeK,IAAf,CAAoBK,UAAxB,EAAoC;AAClCf,MAAAA,OAAO,CAACgB,IAAR,CAAa,SAAb;AACD;;AACD,WAAOX,QAAQ,CAACK,IAAhB;AACD,GAfM,MAeA;AACLX,IAAAA,YAAY,CAACa,MAAb,CAAoB;AAClBC,MAAAA,QAAQ,EAAE;AADQ,KAApB;AAGAd,IAAAA,YAAY,CAACI,KAAb,CAAmB;AACjBK,MAAAA,OAAO,EAAE,eADQ;AAEjBM,MAAAA,WAAW,EAAE;AAFI,KAAnB;AAIA,WAAO;AACLR,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA,MAAM,EAAEH,WAFH;AAGLI,MAAAA,OAAO,EAAE;AAHJ,KAAP;AAKD;AACF,CA7CD;;AA+CA,eAAeN,YAAf","sourcesContent":["import { notification } from \"antd\";\nimport history from \"@/utils/history\";\nimport codeMessage from \"./codeMessage\";\n\nconst errorHandler = (error, emptyResult = null) => {\n  const { response } = error;\n\n  if (!response) {\n    // notification.config({\n    //   duration: 20,\n    // });\n    // notification.error({\n    //   message: \"No internet connection\",\n    //   description: \"Cannot connect to the server, Check your internet network\",\n    // });\n    return {\n      success: false,\n      result: emptyResult,\n      message: \"Cannot connect to the server, Check your internet network\",\n    };\n  } else if (response && response.status) {\n    const message = response.data && response.data.message;\n    const errorText = message || codeMessage[response.status];\n    const { status } = response;\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: `Request error ${status}`,\n      description: errorText,\n    });\n    if (error.response.data.jwtExpired) {\n      history.push(\"/logout\");\n    }\n    return response.data;\n  } else {\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: \"Unknown Error\",\n      description: \"An unknown error occurred in the app, please try again. \",\n    });\n    return {\n      success: false,\n      result: emptyResult,\n      message: \"An unknown error occurred in the app, please try again. \",\n    };\n  }\n};\n\nexport default errorHandler;\n"]},"metadata":{},"sourceType":"module"}