{"ast":null,"code":"import * as actionTypes from \"./types\";\nconst INITIAL_REF_STATE = {\n  result: [],\n  selected: null,\n  isLoading: false,\n  isSuccess: false\n};\nconst INITIAL_STATE = {};\n\nconst searchReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    payload = null,\n    keyState = null\n  } = action;\n\n  switch (action.type) {\n    case actionTypes.INIT_STATE:\n      {\n        let newState = {};\n        payload.map(refKey => newState[refKey] = INITIAL_REF_STATE);\n        return newState;\n      }\n\n    case actionTypes.RESET_STATE:\n      return INITIAL_STATE;\n\n    case actionTypes.RESET_REF:\n      return { ...state,\n        [keyState]: INITIAL_REF_STATE\n      };\n\n    case actionTypes.CURRENT_SELECTED:\n      return { ...state,\n        [keyState]: { ...state[keyState],\n          selected: payload\n        }\n      };\n\n    case actionTypes.REQUEST_LOADING:\n      return { ...state,\n        [keyState]: { ...INITIAL_REF_STATE,\n          isLoading: true\n        }\n      };\n\n    case actionTypes.REQUEST_FAILED:\n      return { ...state,\n        [keyState]: INITIAL_REF_STATE\n      };\n\n    case actionTypes.REQUEST_SUCCESS:\n      return { ...state,\n        [keyState]: { ...INITIAL_REF_STATE,\n          result: payload,\n          isSuccess: true\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;","map":{"version":3,"sources":["E:/frontend/src/redux/search/reducer.js"],"names":["actionTypes","INITIAL_REF_STATE","result","selected","isLoading","isSuccess","INITIAL_STATE","searchReducer","state","action","payload","keyState","type","INIT_STATE","newState","map","refKey","RESET_STATE","RESET_REF","CURRENT_SELECTED","REQUEST_LOADING","REQUEST_FAILED","REQUEST_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,SAA7B;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,MAAM,EAAE,EADgB;AAExBC,EAAAA,QAAQ,EAAE,IAFc;AAGxBC,EAAAA,SAAS,EAAE,KAHa;AAIxBC,EAAAA,SAAS,EAAE;AAJa,CAA1B;AAMA,MAAMC,aAAa,GAAG,EAAtB;;AAEA,MAAMC,aAAa,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BF,aAA0B;AAAA,MAAXG,MAAW;AACvD,QAAM;AAAEC,IAAAA,OAAO,GAAG,IAAZ;AAAkBC,IAAAA,QAAQ,GAAG;AAA7B,MAAsCF,MAA5C;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKZ,WAAW,CAACa,UAAjB;AAA6B;AAC3B,YAAIC,QAAQ,GAAG,EAAf;AACAJ,QAAAA,OAAO,CAACK,GAAR,CAAaC,MAAD,IAAaF,QAAQ,CAACE,MAAD,CAAR,GAAmBf,iBAA5C;AACA,eAAOa,QAAP;AACD;;AAED,SAAKd,WAAW,CAACiB,WAAjB;AACE,aAAOX,aAAP;;AAEF,SAAKN,WAAW,CAACkB,SAAjB;AACE,aAAO,EACL,GAAGV,KADE;AAEL,SAACG,QAAD,GAAYV;AAFP,OAAP;;AAKF,SAAKD,WAAW,CAACmB,gBAAjB;AACE,aAAO,EACL,GAAGX,KADE;AAEL,SAACG,QAAD,GAAY,EACV,GAAGH,KAAK,CAACG,QAAD,CADE;AAEVR,UAAAA,QAAQ,EAAEO;AAFA;AAFP,OAAP;;AAOF,SAAKV,WAAW,CAACoB,eAAjB;AACE,aAAO,EACL,GAAGZ,KADE;AAEL,SAACG,QAAD,GAAY,EACV,GAAGV,iBADO;AAEVG,UAAAA,SAAS,EAAE;AAFD;AAFP,OAAP;;AAOF,SAAKJ,WAAW,CAACqB,cAAjB;AACE,aAAO,EACL,GAAGb,KADE;AAEL,SAACG,QAAD,GAAYV;AAFP,OAAP;;AAIF,SAAKD,WAAW,CAACsB,eAAjB;AACE,aAAO,EACL,GAAGd,KADE;AAEL,SAACG,QAAD,GAAY,EACV,GAAGV,iBADO;AAEVC,UAAAA,MAAM,EAAEQ,OAFE;AAGVL,UAAAA,SAAS,EAAE;AAHD;AAFP,OAAP;;AASF;AACE,aAAOG,KAAP;AAhDJ;AAkDD,CApDD;;AAsDA,eAAeD,aAAf","sourcesContent":["import * as actionTypes from \"./types\";\n\nconst INITIAL_REF_STATE = {\n  result: [],\n  selected: null,\n  isLoading: false,\n  isSuccess: false,\n};\nconst INITIAL_STATE = {};\n\nconst searchReducer = (state = INITIAL_STATE, action) => {\n  const { payload = null, keyState = null } = action;\n  switch (action.type) {\n    case actionTypes.INIT_STATE: {\n      let newState = {};\n      payload.map((refKey) => (newState[refKey] = INITIAL_REF_STATE));\n      return newState;\n    }\n\n    case actionTypes.RESET_STATE:\n      return INITIAL_STATE;\n\n    case actionTypes.RESET_REF:\n      return {\n        ...state,\n        [keyState]: INITIAL_REF_STATE,\n      };\n\n    case actionTypes.CURRENT_SELECTED:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          selected: payload,\n        },\n      };\n    case actionTypes.REQUEST_LOADING:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_REF_STATE,\n          isLoading: true,\n        },\n      };\n    case actionTypes.REQUEST_FAILED:\n      return {\n        ...state,\n        [keyState]: INITIAL_REF_STATE,\n      };\n    case actionTypes.REQUEST_SUCCESS:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_REF_STATE,\n          result: payload,\n          isSuccess: true,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n"]},"metadata":{},"sourceType":"module"}