{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\nimport storePersist from \"./storePersist\";\nconst logger = createLogger();\nlet middleware = [thunk];\nlet configStore = applyMiddleware(...middleware);\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (process.env.NODE_ENV === \"development\") {\n  middleware = [...middleware, logger];\n  configStore = composeEnhancers(applyMiddleware(...middleware));\n}\n\nconst initialState = storePersist.get(\"auth\") ? {\n  auth: storePersist.get(\"auth\")\n} : {};\nconst store = createStore(rootReducer, initialState, configStore);\nexport default store;","map":{"version":3,"sources":["E:/frontend/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","thunk","createLogger","rootReducer","storePersist","logger","middleware","configStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","process","env","NODE_ENV","initialState","get","auth","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,MAAM,GAAGH,YAAY,EAA3B;AACA,IAAII,UAAU,GAAG,CAACL,KAAD,CAAjB;AAEA,IAAIM,WAAW,GAAGR,eAAe,CAAC,GAAGO,UAAJ,CAAjC;AAEA,MAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CV,OAAxE;;AAEA,IAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CP,EAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAgBD,MAAhB,CAAb;AACAE,EAAAA,WAAW,GAAGC,gBAAgB,CAACT,eAAe,CAAC,GAAGO,UAAJ,CAAhB,CAA9B;AACD;;AAED,MAAMQ,YAAY,GAAGV,YAAY,CAACW,GAAb,CAAiB,MAAjB,IACjB;AAAEC,EAAAA,IAAI,EAAEZ,YAAY,CAACW,GAAb,CAAiB,MAAjB;AAAR,CADiB,GAEjB,EAFJ;AAIA,MAAME,KAAK,GAAGnB,WAAW,CAACK,WAAD,EAAcW,YAAd,EAA4BP,WAA5B,CAAzB;AAEA,eAAeU,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nimport rootReducer from \"./rootReducer\";\nimport storePersist from \"./storePersist\";\n\nconst logger = createLogger();\nlet middleware = [thunk];\n\nlet configStore = applyMiddleware(...middleware);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (process.env.NODE_ENV === \"development\") {\n  middleware = [...middleware, logger];\n  configStore = composeEnhancers(applyMiddleware(...middleware));\n}\n\nconst initialState = storePersist.get(\"auth\")\n  ? { auth: storePersist.get(\"auth\") }\n  : {};\n\nconst store = createStore(rootReducer, initialState, configStore);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}