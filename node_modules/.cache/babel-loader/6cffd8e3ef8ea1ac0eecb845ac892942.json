{"ast":null,"code":"var _jsxFileName = \"F:\\\\outletcontrol\\\\frontend\\\\src\\\\components\\\\ReadItem\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCurrentItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReadItem(_ref) {\n  _s();\n  let {\n    config\n  } = _ref;\n  let {\n    readColumns\n  } = config;\n  const {\n    result: currentResult\n  } = useSelector(selectCurrentItem);\n  const {\n    state\n  } = useCrudContext();\n  const {\n    isReadBoxOpen\n  } = state;\n  const [listState, setListState] = useState([]);\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    console.log(\"currentResult :\", currentResult);\n    console.log(\"readColumns :\", readColumns);\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const list = [];\n    readColumns.map(props => {\n      const propsKey = props.dataIndex;\n      const propsTitle = props.title;\n      const value = valueByString(currentResult, propsKey);\n      list.push({\n        propsKey,\n        label: propsTitle,\n        value: value\n      });\n    });\n    setListState(list);\n  }, [currentResult]);\n  const show = isReadBoxOpen ? {\n    display: \"block\",\n    opacity: 1\n  } : {\n    display: \"none\",\n    opacity: 0\n  };\n  const itemsList = listState.map(item => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 12,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"gutter-row\",\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"gutter-row\",\n        span: 2,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"gutter-row\",\n        span: 14,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, item.propsKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  });\n  console.log(\"itemsList :\", itemsList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: show,\n    children: itemsList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n_s(ReadItem, \"3opOLj8gqXSNRkL54Bbm/2A+nP4=\", false, function () {\n  return [useSelector, useCrudContext];\n});\n_c = ReadItem;\nvar _c;\n$RefreshReg$(_c, \"ReadItem\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Row","Col","Button","useSelector","useCrudContext","selectCurrentItem","valueByString","ReadItem","config","readColumns","result","currentResult","state","isReadBoxOpen","listState","setListState","isFirstRun","console","log","current","list","map","props","propsKey","dataIndex","propsTitle","title","value","push","label","show","display","opacity","itemsList","item"],"sources":["F:/outletcontrol/frontend/src/components/ReadItem/index.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { useCrudContext } from \"@/context/crud\";\r\nimport { selectCurrentItem } from \"@/redux/crud/selectors\";\r\nimport { valueByString } from \"@/utils/helpers\";\r\n\r\nexport default function ReadItem({ config }) {\r\n  let { readColumns } = config;\r\n  const { result: currentResult } = useSelector(selectCurrentItem);\r\n  const { state } = useCrudContext();\r\n  const { isReadBoxOpen } = state;\r\n  const [listState, setListState] = useState([]);\r\n\r\n  const isFirstRun = useRef(true);\r\n  useEffect(() => {\r\n    console.log(\"currentResult :\", currentResult);\r\n    console.log(\"readColumns :\", readColumns);\r\n    if (isFirstRun.current) {\r\n      isFirstRun.current = false;\r\n      return;\r\n    }\r\n    const list = [];\r\n    readColumns.map((props) => {\r\n      const propsKey = props.dataIndex;\r\n      const propsTitle = props.title;\r\n      const value = valueByString(currentResult, propsKey);\r\n      list.push({ propsKey, label: propsTitle, value: value });\r\n    });\r\n    setListState(list);\r\n  }, [currentResult]);\r\n\r\n  const show = isReadBoxOpen\r\n    ? { display: \"block\", opacity: 1 }\r\n    : { display: \"none\", opacity: 0 };\r\n\r\n  const itemsList = listState.map((item) => {\r\n    return (\r\n      <Row key={item.propsKey} gutter={12}>\r\n        <Col className=\"gutter-row\" span={8}>\r\n          <p>{item.label}</p>\r\n        </Col>\r\n        <Col className=\"gutter-row\" span={2}>\r\n          <p> : </p>\r\n        </Col>\r\n        <Col className=\"gutter-row\" span={14}>\r\n          <p>{item.value}</p>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  });\r\n\r\n  console.log(\"itemsList :\", itemsList);\r\n  return <div style={show}>{itemsList}</div>;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,GAAG,EAAEC,GAAG,EAAEC,MAAM,QAAQ,MAAM;AACvC,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,aAAa,QAAQ,iBAAiB;AAAC;AAEhD,eAAe,SAASC,QAAQ,OAAa;EAAA;EAAA,IAAZ;IAAEC;EAAO,CAAC;EACzC,IAAI;IAAEC;EAAY,CAAC,GAAGD,MAAM;EAC5B,MAAM;IAAEE,MAAM,EAAEC;EAAc,CAAC,GAAGR,WAAW,CAACE,iBAAiB,CAAC;EAChE,MAAM;IAAEO;EAAM,CAAC,GAAGR,cAAc,EAAE;EAClC,MAAM;IAAES;EAAc,CAAC,GAAGD,KAAK;EAC/B,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMiB,UAAU,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAC/BD,SAAS,CAAC,MAAM;IACdoB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEP,aAAa,CAAC;IAC7CM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAET,WAAW,CAAC;IACzC,IAAIO,UAAU,CAACG,OAAO,EAAE;MACtBH,UAAU,CAACG,OAAO,GAAG,KAAK;MAC1B;IACF;IACA,MAAMC,IAAI,GAAG,EAAE;IACfX,WAAW,CAACY,GAAG,CAAEC,KAAK,IAAK;MACzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,SAAS;MAChC,MAAMC,UAAU,GAAGH,KAAK,CAACI,KAAK;MAC9B,MAAMC,KAAK,GAAGrB,aAAa,CAACK,aAAa,EAAEY,QAAQ,CAAC;MACpDH,IAAI,CAACQ,IAAI,CAAC;QAAEL,QAAQ;QAAEM,KAAK,EAAEJ,UAAU;QAAEE,KAAK,EAAEA;MAAM,CAAC,CAAC;IAC1D,CAAC,CAAC;IACFZ,YAAY,CAACK,IAAI,CAAC;EACpB,CAAC,EAAE,CAACT,aAAa,CAAC,CAAC;EAEnB,MAAMmB,IAAI,GAAGjB,aAAa,GACtB;IAAEkB,OAAO,EAAE,OAAO;IAAEC,OAAO,EAAE;EAAE,CAAC,GAChC;IAAED,OAAO,EAAE,MAAM;IAAEC,OAAO,EAAE;EAAE,CAAC;EAEnC,MAAMC,SAAS,GAAGnB,SAAS,CAACO,GAAG,CAAEa,IAAI,IAAK;IACxC,oBACE,QAAC,GAAG;MAAqB,MAAM,EAAE,EAAG;MAAA,wBAClC,QAAC,GAAG;QAAC,SAAS,EAAC,YAAY;QAAC,IAAI,EAAE,CAAE;QAAA,uBAClC;UAAA,UAAIA,IAAI,CAACL;QAAK;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QACf,eACN,QAAC,GAAG;QAAC,SAAS,EAAC,YAAY;QAAC,IAAI,EAAE,CAAE;QAAA,uBAClC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAU;QAAA;QAAA;QAAA;MAAA,QACN,eACN,QAAC,GAAG;QAAC,SAAS,EAAC,YAAY;QAAC,IAAI,EAAE,EAAG;QAAA,uBACnC;UAAA,UAAIK,IAAI,CAACP;QAAK;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QACf;IAAA,GATEO,IAAI,CAACX,QAAQ;MAAA;MAAA;MAAA;IAAA,QAUjB;EAEV,CAAC,CAAC;EAEFN,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEe,SAAS,CAAC;EACrC,oBAAO;IAAK,KAAK,EAAEH,IAAK;IAAA,UAAEG;EAAS;IAAA;IAAA;IAAA;EAAA,QAAO;AAC5C;AAAC,GA/CuB1B,QAAQ;EAAA,QAEIJ,WAAW,EAC3BC,cAAc;AAAA;AAAA,KAHVG,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}