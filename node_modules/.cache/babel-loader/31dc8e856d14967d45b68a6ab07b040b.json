{"ast":null,"code":"import * as actionTypes from \"./types\";\nexport const initialState = {\n  isModalOpen: false,\n  isPanelCollapsed: false,\n  isBoxCollapsed: false,\n  isReadBoxOpen: true,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false\n};\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return { ...state,\n        isModalOpen: true\n      };\n\n    case actionTypes.CLOSE_MODAL:\n      return { ...state,\n        isModalOpen: false\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return { ...state,\n        isPanelCollapsed: false\n      };\n\n    case actionTypes.CLOSE_PANEL:\n      return { ...state,\n        isPanelCollapsed: true\n      };\n\n    case actionTypes.COLLAPSE_PANEL:\n      return { ...state,\n        isPanelCollapsed: !state.isPanelCollapsed\n      };\n\n    case actionTypes.OPEN_BOX:\n      return { ...state,\n        isBoxCollapsed: true\n      };\n\n    case actionTypes.CLOSE_BOX:\n      return { ...state,\n        isBoxCollapsed: false\n      };\n\n    case actionTypes.COLLAPSE_BOX:\n      return { ...state,\n        isBoxCollapsed: !state.isBoxCollapsed\n      };\n\n    case actionTypes.OPEN_READ_BOX:\n      return { ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true\n      };\n\n    case actionTypes.CLOSE_READ_BOX:\n      return { ...state,\n        isReadBoxOpen: false\n      };\n\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return { ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true\n      };\n\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return { ...state,\n        isAdvancedBoxOpen: false\n      };\n\n    case actionTypes.OPEN_EDIT_BOX:\n      return { ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true\n      };\n\n    case actionTypes.CLOSE_EDIT_BOX:\n      return { ...state,\n        isEditBoxOpen: false\n      };\n\n    case actionTypes.COLLAPSE_READ_BOX:\n      return { ...state,\n        isReadBoxOpen: !state.isReadBoxOpen\n      };\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}","map":{"version":3,"sources":["C:/Users/91727/Desktop/milina/starter-antd-admin-crud-auth-mern-master/frontend/src/context/crud/reducer.jsx"],"names":["actionTypes","initialState","isModalOpen","isPanelCollapsed","isBoxCollapsed","isReadBoxOpen","isAdvancedBoxOpen","isEditBoxOpen","contextReducer","state","action","type","OPEN_MODAL","CLOSE_MODAL","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","COLLAPSE_READ_BOX","Error"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,SAA7B;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,WAAW,EAAE,KADa;AAE1BC,EAAAA,gBAAgB,EAAE,KAFQ;AAG1BC,EAAAA,cAAc,EAAE,KAHU;AAI1BC,EAAAA,aAAa,EAAE,IAJW;AAK1BC,EAAAA,iBAAiB,EAAE,KALO;AAM1BC,EAAAA,aAAa,EAAE;AANW,CAArB;AASP,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAW,CAACY,UAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELP,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF,SAAKF,WAAW,CAACa,WAAjB;AACE,aAAO,EACL,GAAGJ,KADE;AAELP,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAKF,SAAKF,WAAW,CAACc,UAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELN,QAAAA,gBAAgB,EAAE;AAFb,OAAP;;AAIF,SAAKH,WAAW,CAACe,WAAjB;AACE,aAAO,EACL,GAAGN,KADE;AAELN,QAAAA,gBAAgB,EAAE;AAFb,OAAP;;AAIF,SAAKH,WAAW,CAACgB,cAAjB;AACE,aAAO,EACL,GAAGP,KADE;AAELN,QAAAA,gBAAgB,EAAE,CAACM,KAAK,CAACN;AAFpB,OAAP;;AAIF,SAAKH,WAAW,CAACiB,QAAjB;AACE,aAAO,EACL,GAAGR,KADE;AAELL,QAAAA,cAAc,EAAE;AAFX,OAAP;;AAIF,SAAKJ,WAAW,CAACkB,SAAjB;AACE,aAAO,EACL,GAAGT,KADE;AAELL,QAAAA,cAAc,EAAE;AAFX,OAAP;;AAIF,SAAKJ,WAAW,CAACmB,YAAjB;AACE,aAAO,EACL,GAAGV,KADE;AAELL,QAAAA,cAAc,EAAE,CAACK,KAAK,CAACL;AAFlB,OAAP;;AAIF,SAAKJ,WAAW,CAACoB,aAAjB;AACE,aAAO,EACL,GAAGX,KADE;AAELH,QAAAA,iBAAiB,EAAE,KAFd;AAGLC,QAAAA,aAAa,EAAE,KAHV;AAILF,QAAAA,aAAa,EAAE;AAJV,OAAP;;AAMF,SAAKL,WAAW,CAACqB,cAAjB;AACE,aAAO,EACL,GAAGZ,KADE;AAELJ,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF,SAAKL,WAAW,CAACsB,iBAAjB;AACE,aAAO,EACL,GAAGb,KADE;AAELJ,QAAAA,aAAa,EAAE,KAFV;AAGLE,QAAAA,aAAa,EAAE,KAHV;AAILD,QAAAA,iBAAiB,EAAE;AAJd,OAAP;;AAMF,SAAKN,WAAW,CAACuB,kBAAjB;AACE,aAAO,EACL,GAAGd,KADE;AAELH,QAAAA,iBAAiB,EAAE;AAFd,OAAP;;AAIF,SAAKN,WAAW,CAACwB,aAAjB;AACE,aAAO,EACL,GAAGf,KADE;AAELJ,QAAAA,aAAa,EAAE,KAFV;AAGLC,QAAAA,iBAAiB,EAAE,KAHd;AAILC,QAAAA,aAAa,EAAE;AAJV,OAAP;;AAMF,SAAKP,WAAW,CAACyB,cAAjB;AACE,aAAO,EACL,GAAGhB,KADE;AAELF,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF,SAAKP,WAAW,CAAC0B,iBAAjB;AACE,aAAO,EACL,GAAGjB,KADE;AAELJ,QAAAA,aAAa,EAAE,CAACI,KAAK,CAACJ;AAFjB,OAAP;;AAIF;AAAS;AACP,cAAM,IAAIsB,KAAJ,CAAW,0BAAyBjB,MAAM,CAACC,IAAK,EAAhD,CAAN;AACD;AArFH;AAuFD","sourcesContent":["import * as actionTypes from \"./types\";\n\nexport const initialState = {\n  isModalOpen: false,\n  isPanelCollapsed: false,\n  isBoxCollapsed: false,\n  isReadBoxOpen: true,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false,\n};\n\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: false,\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: true,\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: !state.isPanelCollapsed,\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true,\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false,\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed,\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true,\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n      };\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true,\n      };\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n      };\n    case actionTypes.OPEN_EDIT_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true,\n      };\n    case actionTypes.CLOSE_EDIT_BOX:\n      return {\n        ...state,\n        isEditBoxOpen: false,\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}