{"ast":null,"code":"import * as actionTypes from \"./types\";\nimport * as authService from \"@/auth\";\nimport storePersist from \"@/redux/storePersist\";\nimport history from \"@/utils/history\";\nexport const login = loginAdminData => async dispatch => {\n  dispatch({\n    type: actionTypes.LOADING_REQUEST,\n    payload: {\n      loading: true\n    }\n  });\n  const data = await authService.login(loginAdminData);\n  if (data.success === true) {\n    const authValue = {\n      current: data.result.admin,\n      loading: false,\n      isLoggedIn: true\n    };\n    storePersist.set(\"auth\", authValue);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: data.result.admin\n    });\n    history.push(\"/\");\n  } else {\n    dispatch({\n      type: actionTypes.FAILED_REQUEST,\n      payload: data\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  authService.logout();\n  dispatch({\n    type: actionTypes.LOGOUT_SUCCESS\n  });\n  history.push(\"/login\");\n};","map":{"version":3,"names":["actionTypes","authService","storePersist","history","login","loginAdminData","dispatch","type","LOADING_REQUEST","payload","loading","data","success","authValue","current","result","admin","isLoggedIn","set","LOGIN_SUCCESS","push","FAILED_REQUEST","logout","LOGOUT_SUCCESS"],"sources":["F:/outletcontrol/frontend/src/redux/auth/actions.js"],"sourcesContent":["import * as actionTypes from \"./types\";\r\nimport * as authService from \"@/auth\";\r\nimport storePersist from \"@/redux/storePersist\";\r\nimport history from \"@/utils/history\";\r\n\r\nexport const login = (loginAdminData) => async (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.LOADING_REQUEST,\r\n    payload: { loading: true },\r\n  });\r\n  const data = await authService.login(loginAdminData);\r\n\r\n  if (data.success === true) {\r\n    const authValue = {\r\n      current: data.result.admin,\r\n      loading: false,\r\n      isLoggedIn: true,\r\n    };\r\n    storePersist.set(\"auth\", authValue);\r\n    dispatch({\r\n      type: actionTypes.LOGIN_SUCCESS,\r\n      payload: data.result.admin,\r\n    });\r\n    history.push(\"/\");\r\n  } else {\r\n    dispatch({\r\n      type: actionTypes.FAILED_REQUEST,\r\n      payload: data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  authService.logout();\r\n  dispatch({\r\n    type: actionTypes.LOGOUT_SUCCESS,\r\n  });\r\n  history.push(\"/login\");\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,WAAW,MAAM,SAAS;AACtC,OAAO,KAAKC,WAAW,MAAM,QAAQ;AACrC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,OAAO,MAAM,iBAAiB;AAErC,OAAO,MAAMC,KAAK,GAAIC,cAAc,IAAK,MAAOC,QAAQ,IAAK;EAC3DA,QAAQ,CAAC;IACPC,IAAI,EAAEP,WAAW,CAACQ,eAAe;IACjCC,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAK;EAC3B,CAAC,CAAC;EACF,MAAMC,IAAI,GAAG,MAAMV,WAAW,CAACG,KAAK,CAACC,cAAc,CAAC;EAEpD,IAAIM,IAAI,CAACC,OAAO,KAAK,IAAI,EAAE;IACzB,MAAMC,SAAS,GAAG;MAChBC,OAAO,EAAEH,IAAI,CAACI,MAAM,CAACC,KAAK;MAC1BN,OAAO,EAAE,KAAK;MACdO,UAAU,EAAE;IACd,CAAC;IACDf,YAAY,CAACgB,GAAG,CAAC,MAAM,EAAEL,SAAS,CAAC;IACnCP,QAAQ,CAAC;MACPC,IAAI,EAAEP,WAAW,CAACmB,aAAa;MAC/BV,OAAO,EAAEE,IAAI,CAACI,MAAM,CAACC;IACvB,CAAC,CAAC;IACFb,OAAO,CAACiB,IAAI,CAAC,GAAG,CAAC;EACnB,CAAC,MAAM;IACLd,QAAQ,CAAC;MACPC,IAAI,EAAEP,WAAW,CAACqB,cAAc;MAChCZ,OAAO,EAAEE;IACX,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMW,MAAM,GAAG,MAAM,MAAOhB,QAAQ,IAAK;EAC9CL,WAAW,CAACqB,MAAM,EAAE;EACpBhB,QAAQ,CAAC;IACPC,IAAI,EAAEP,WAAW,CAACuB;EACpB,CAAC,CAAC;EACFpB,OAAO,CAACiB,IAAI,CAAC,QAAQ,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"module"}