{"ast":null,"code":"import axios from \"axios\";\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\nimport { token as tokenCookies } from \"@/auth\";\nimport errorHandler from \"./errorHandler\";\nimport successHandler from \"./successHandler\";\nconst headersInstance = {\n  [ACCESS_TOKEN_NAME]: tokenCookies.get()\n};\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    ...headersInstance\n  }\n});\nconst request = {\n  create: async (entity, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance\n    };\n    console.log(\"jsonData\", jsonData);\n    try {\n      const response = await axiosInstance.post(entity + \"/create\", jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  read: async (entity, id) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance\n    };\n    try {\n      const response = await axiosInstance.get(entity + \"/read/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  update: async (entity, id, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance\n    };\n    try {\n      const response = await axiosInstance.patch(entity + \"/update/\" + id, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  delete: async function (entity, id) {\n    let option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    axiosInstance.defaults.headers = {\n      ...headersInstance\n    };\n    try {\n      const response = await axiosInstance.delete(entity + \"/delete/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  filter: async function (entity) {\n    let option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    axiosInstance.defaults.headers = {\n      ...headersInstance\n    };\n    try {\n      let filter = option.filter ? \"filter=\" + option.filter : \"\";\n      let equal = option.equal ? \"&equal=\" + option.equal : \"\";\n      let query = `?${filter}${equal}`;\n      const response = await axiosInstance.get(entity + \"/filter\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  search: async function (entity, source) {\n    let option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get()\n    };\n    try {\n      let query = \"\";\n      if (option !== {}) {\n        let fields = option.fields ? \"fields=\" + option.fields : \"\";\n        let question = option.question ? \"&q=\" + option.question : \"\";\n        query = `?${fields}${question}`;\n      }\n      // headersInstance.cancelToken = source.token;\n      const response = await axiosInstance.get(entity + \"/search\" + query, {\n        cancelToken: source.token\n      });\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  list: async function (entity) {\n    let option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get()\n    };\n    console.log(tokenCookies.get());\n    try {\n      let query = \"\";\n      if (option !== {}) {\n        let page = option.page ? \"page=\" + option.page : \"\";\n        let items = option.items ? \"&items=\" + option.items : \"\";\n        query = `?${page}${items}`;\n      }\n      const response = await axiosInstance.get(entity + \"/list\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  post: async function (entityUrl, jsonData) {\n    let option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    axiosInstance.defaults.headers = {\n      ...headersInstance\n    };\n    try {\n      const response = await axiosInstance.post(entityUrl, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  get: async entityUrl => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance\n    };\n    try {\n      const response = await axiosInstance.get(entityUrl);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  patch: async (entityUrl, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance\n    };\n    try {\n      const response = await axiosInstance.patch(entityUrl, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  source: () => {\n    // const CancelToken = await axiosInstance.CancelToken;\n\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    return source;\n  }\n};\nexport default request;","map":{"version":3,"names":["axios","API_BASE_URL","ACCESS_TOKEN_NAME","token","tokenCookies","errorHandler","successHandler","headersInstance","get","axiosInstance","create","baseURL","timeout","headers","request","entity","jsonData","defaults","console","log","response","post","error","read","id","update","patch","delete","option","filter","equal","query","search","source","fields","question","cancelToken","list","page","items","entityUrl","CancelToken"],"sources":["F:/outletcontrol/frontend/src/request/request.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\r\nimport { token as tokenCookies } from \"@/auth\";\r\nimport errorHandler from \"./errorHandler\";\r\nimport successHandler from \"./successHandler\";\r\n\r\nconst headersInstance = { [ACCESS_TOKEN_NAME]: tokenCookies.get() };\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    ...headersInstance,\r\n  },\r\n});\r\n\r\nconst request = {\r\n  create: async (entity, jsonData) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    console.log(\"jsonData\", jsonData);\r\n    try {\r\n      const response = await axiosInstance.post(entity + \"/create\", jsonData);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n  read: async (entity, id) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      const response = await axiosInstance.get(entity + \"/read/\" + id);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n  update: async (entity, id, jsonData) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      const response = await axiosInstance.patch(\r\n        entity + \"/update/\" + id,\r\n        jsonData\r\n      );\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n\r\n  delete: async (entity, id, option = {}) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      const response = await axiosInstance.delete(entity + \"/delete/\" + id);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n\r\n  filter: async (entity, option = {}) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      let filter = option.filter ? \"filter=\" + option.filter : \"\";\r\n      let equal = option.equal ? \"&equal=\" + option.equal : \"\";\r\n      let query = `?${filter}${equal}`;\r\n\r\n      const response = await axiosInstance.get(entity + \"/filter\" + query);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n\r\n  search: async (entity, source, option = {}) => {\r\n    axiosInstance.defaults.headers = {\r\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\r\n    };\r\n    try {\r\n      let query = \"\";\r\n      if (option !== {}) {\r\n        let fields = option.fields ? \"fields=\" + option.fields : \"\";\r\n        let question = option.question ? \"&q=\" + option.question : \"\";\r\n        query = `?${fields}${question}`;\r\n      }\r\n      // headersInstance.cancelToken = source.token;\r\n      const response = await axiosInstance.get(entity + \"/search\" + query, {\r\n        cancelToken: source.token,\r\n      });\r\n\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n\r\n  list: async (entity, option = {}) => {\r\n    axiosInstance.defaults.headers = {\r\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\r\n    };\r\n    console.log(tokenCookies.get());\r\n    try {\r\n      let query = \"\";\r\n      if (option !== {}) {\r\n        let page = option.page ? \"page=\" + option.page : \"\";\r\n        let items = option.items ? \"&items=\" + option.items : \"\";\r\n        query = `?${page}${items}`;\r\n      }\r\n\r\n      const response = await axiosInstance.get(entity + \"/list\" + query);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n\r\n  post: async (entityUrl, jsonData, option = {}) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      const response = await axiosInstance.post(entityUrl, jsonData);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n  get: async (entityUrl) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      const response = await axiosInstance.get(entityUrl);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n  patch: async (entityUrl, jsonData) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      const response = await axiosInstance.patch(entityUrl, jsonData);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n  source: () => {\r\n    // const CancelToken = await axiosInstance.CancelToken;\r\n\r\n    const CancelToken = axios.CancelToken;\r\n    const source = CancelToken.source();\r\n    return source;\r\n  },\r\n};\r\nexport default request;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}